.. _release-notes_0.4:

***********
Version 0.4
***********

Whats new?
----------
Refractor most of the code. 
Move input in the separate submodule.
Remove molecule plot type from :ref:`tb2j-plotter.py <tb2j-plotter>` script.

Major change in the logic of reading exchang files and templates. 
Instead of using the class to load the file as before:

.. code-block:: python

    from rad_tools.exchange.model import ExchangeModelTB2J
    from rad_tools.exchange.template import ExchangeTemplate

    model = ExchangeModelTB2J(filename)
    template = ExchangeTemplate(template_filename)

Now one need to use read functions from input-output module:

.. code-block:: python

    from rad_tools.io.tb2j import read_exchange_model
    from rad_tools.io.internal import read_template

    model = read_exchange_model(filename)
    template = read_template(template_filename)

0.4.1
-----

Add :ref:`--accuracy <tb2j-extractor_accuracy>` argument to the 
:ref:`tb2j-extractor <tb2j-extractor_accuracy>` script.

0.4.2
-----

Add ``get_bond_vector`` to the ExchangeModel.

0.4.3
-----

Add reciprocal vectors to the ExchangeModel.

0.4.4
-----

Add io interface.

There is two ways to import read functions:

.. code-block:: python

    from rad_tools.io.tb2j import read_exchange_model
    from rad_tools.io import read_tb2j_model

.. code-block:: python

    from rad_tools.io.internal import 
    from rad_tools.io import read_template

Add ``number_spins_in_unit_cell`` property to the ``ExchangeModel`` class

0.4.5
-----

Add ``reduced_parameters`` to the ``ExchangeModel`` class.

0.4.6
-----

Add iexchange interface.

There is two ways to import read functions:

.. code-block:: python

    from rad_tools.exchange.model import ExchangeModel
    from rad_tools.exchange import ExchangeModel

.. code-block:: python

    from rad_tools.exchange.template import ExchangeTemplate
    from rad_tools.exchange import ExchangeTemplate

0.4.7
-----

Add High symmetry k-points. 

Add methods to round up the exchange model.
